plugins {
    id 'java'
    id 'org.hidetake.ssh' version '2.9.0'
}

sourceCompatibility = JavaVersion.VERSION_1_4
targetCompatibility = JavaVersion.VERSION_1_4

jar {
    manifest {
        attributes(

                'Main-Class': 'homeassistant.display.kindle.HomeAssistantKindleDisplay',

                'Implementation-Title': 'Home Assistant Display',
                'Implementation-Version': version,
                'Implementation-Vendor': 'Pavel Savinov (swapii@gmail.com)',

                'Extension-List': 'SDK',

                'SDK-Extension-Name': 'com.amazon.kindle.kindlet',
                'SDK-Specification-Version': '1.2',

                'Toolbar-Mode': 'persistent',
                "Font-Size-Mode": "point"

        )
    }
}

def signedJar = new File(new File(project.buildDir, 'tmp/jar/signed'), jar.archivePath.name)

task signJar(dependsOn: 'jar', description: 'Sign JAR', group: 'Build') {
    def originalJar = jar.archivePath
    inputs.file(originalJar)
    outputs.file(signedJar)
    doLast {
        copy {
            from originalJar
            into signedJar.parentFile.absolutePath
        }
        ['dktest', 'ditest', 'dntest'].each { key ->
            ant.signjar(
                    jar: signedJar,
                    keystore: new File(project.projectDir, 'developer.keystore'),
                    storepass: 'password',
                    alias: key,
            )
        }
    }
}

def resultAppFileDir = new File(project.buildDir, 'app')
def resultAppFile = new File(resultAppFileDir, signedJar.name.replace('.jar', '.azw2'))

task azw2(dependsOn: 'signJar', description: 'Copy JAR to AZW2', group: 'Build') {
    def originalJar = signedJar
    inputs.file(originalJar)
    outputs.file(resultAppFileDir)
    doLast {
        copy {
            from originalJar
            into resultAppFileDir
            rename { name -> name.replace('.jar', '.azw2') }
        }
    }
}

assemble.finalizedBy azw2

remotes {
    kindle {
        host = kindleHost
        user = 'root'
        identity = file(kindleIdentityFile)
    }
}

task deployToKindleOverSSH(dependsOn: 'azw2', description: 'Deploy AZW2 to Kindle over SSH', group: 'Deploy') {
    inputs.file(resultAppFile)
    doLast {
        ssh.run {
            session(remotes.kindle) {
                put from: resultAppFile, into: '/mnt/us/documents/'
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: amazonEbookLibsDir, include: ['*.jar'])
}
